<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.7.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>pl.kosa</groupId>
	<artifactId>caloriecounter-client-vaadin</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>caloriecounterClientVaadin</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<java.version>11</java.version>
		<vaadin.version>14.4.5</vaadin.version>

		<drivers.dir>${project.basedir}/drivers</drivers.dir>
		<drivers.downloader.phase>pre-integration-test</drivers.downloader.phase>
	</properties>

	<repositories>
		<repository>
			<id>central</id>
			<url>https://repo1.maven.org/maven2/</url>
			<snapshots><enabled>false</enabled></snapshots>
		</repository>
		<repository>
			<id>Vaadin Directory</id>
			<url>https://maven.vaadin.com/vaadin-addons</url>
			<snapshots><enabled>false</enabled></snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>central</id>
			<url>https://repo1.maven.org/maven2/</url>
			<snapshots><enabled>false</enabled></snapshots>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>
		<dependency>
			<groupId>com.vaadin</groupId>
			<!-- Replace artifactId with vaadin-core to use only free components -->
			<artifactId>vaadin</artifactId>
			<exclusions>
				<!-- Webjars are only needed when running in Vaadin 13 compatibility mode -->
				<exclusion>
					<groupId>com.vaadin.webjar</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.bowergithub.insites</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.bowergithub.polymer</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.bowergithub.polymerelements</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.bowergithub.vaadin</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.bowergithub.webcomponents</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-spring-boot-starter</artifactId>
			<exclusions>
				<!-- Excluding so that webjars are not included. -->
				<exclusion><groupId>com.vaadin</groupId>
					<artifactId>vaadin-core</artifactId></exclusion>

					<exclusion>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-starter-tomcat</artifactId>
					</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-testbench</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-undertow</artifactId>
			<version>2.4.2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.keycloak</groupId>
			<artifactId>keycloak-spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-client</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.7.0</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-bom</artifactId>
				<version>${vaadin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.keycloak.bom</groupId>
				<artifactId>keycloak-adapter-bom</artifactId>
				<version>8.0.1</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<defaultGoal>spring-boot:run</defaultGoal>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!-- Clean build and startup time for Vaadin apps sometimes may exceed
                     the default Spring Boot's 30sec timeout.  -->
				<configuration>
					<wait>500</wait>
					<maxAttempts>240</maxAttempts>
				</configuration>
			</plugin>

			<!--
                Take care of synchronizing java dependencies and imports in
                package.json and main.js files.
                It also creates webpack.config.js if not exists yet.
            -->
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>14.1.2</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-frontend</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

<!--	<profiles>-->
<!--		<profile>-->
<!--			&lt;!&ndash; Production mode is activated using -Pproduction &ndash;&gt;-->
<!--			<id>production</id>-->
<!--			<properties>-->
<!--				<vaadin.productionMode>true</vaadin.productionMode>-->
<!--			</properties>-->

<!--			<dependencies>-->
<!--				<dependency>-->
<!--					<groupId>com.vaadin</groupId>-->
<!--					<artifactId>flow-server-production-mode</artifactId>-->
<!--				</dependency>-->
<!--			</dependencies>-->

<!--			<build>-->
<!--				<plugins>-->
<!--					<plugin>-->
<!--						<groupId>org.springframework.boot</groupId>-->
<!--						<artifactId>spring-boot-maven-plugin</artifactId>-->
<!--						<configuration>-->
<!--							<jvmArguments>-Dvaadin.productionMode</jvmArguments>-->
<!--						</configuration>-->
<!--					</plugin>-->
<!--					<plugin>-->
<!--						<groupId>com.vaadin</groupId>-->
<!--						<artifactId>vaadin-maven-plugin</artifactId>-->
<!--						<executions>-->
<!--							<execution>-->
<!--								<goals>-->
<!--									<goal>build-frontend</goal>-->
<!--								</goals>-->
<!--								<phase>compile</phase>-->
<!--							</execution>-->
<!--						</executions>-->
<!--					</plugin>-->
<!--				</plugins>-->
<!--			</build>-->
<!--		</profile>-->

<!--		<profile>-->
<!--			<id>integration-tests</id>-->
<!--			<build>-->
<!--				<plugins>-->
<!--					<plugin>-->
<!--						<groupId>org.springframework.boot</groupId>-->
<!--						<artifactId>spring-boot-maven-plugin</artifactId>-->
<!--						<executions>-->
<!--							<execution>-->
<!--								<id>start-spring-boot</id>-->
<!--								<phase>pre-integration-test</phase>-->
<!--								<goals>-->
<!--									<goal>start</goal>-->
<!--								</goals>-->
<!--							</execution>-->
<!--							<execution>-->
<!--								<id>stop-spring-boot</id>-->
<!--								<phase>post-integration-test</phase>-->
<!--								<goals>-->
<!--									<goal>stop</goal>-->
<!--								</goals>-->
<!--							</execution>-->
<!--						</executions>-->
<!--					</plugin>-->

<!--					&lt;!&ndash; Runs the integration tests (*IT) after the server is started &ndash;&gt;-->
<!--					<plugin>-->
<!--						<groupId>org.apache.maven.plugins</groupId>-->
<!--						<artifactId>maven-failsafe-plugin</artifactId>-->
<!--						<executions>-->
<!--							<execution>-->
<!--								<goals>-->
<!--									<goal>integration-test</goal>-->
<!--									<goal>verify</goal>-->
<!--								</goals>-->
<!--							</execution>-->
<!--						</executions>-->
<!--						<configuration>-->
<!--							<trimStackTrace>false</trimStackTrace>-->
<!--							<enableAssertions>true</enableAssertions>-->
<!--							<systemPropertyVariables>-->
<!--								&lt;!&ndash; Pass location of downloaded webdrivers to the tests &ndash;&gt;-->
<!--								<webdriver.chrome.driver>${webdriver.chrome.driver}</webdriver.chrome.driver>-->
<!--							</systemPropertyVariables>-->
<!--						</configuration>-->
<!--					</plugin>-->

<!--					<plugin>-->
<!--						<groupId>com.lazerycode.selenium</groupId>-->
<!--						<artifactId>driver-binary-downloader-maven-plugin</artifactId>-->
<!--						<version>1.0.17</version>-->
<!--						<configuration>-->
<!--							<onlyGetDriversForHostOperatingSystem>true-->
<!--							</onlyGetDriversForHostOperatingSystem>-->
<!--							<rootStandaloneServerDirectory>-->
<!--								${project.basedir}/drivers/driver-->
<!--							</rootStandaloneServerDirectory>-->
<!--							<downloadedZipFileDirectory>-->
<!--								${project.basedir}/drivers/driver_zips-->
<!--							</downloadedZipFileDirectory>-->
<!--							<customRepositoryMap>-->
<!--								${project.basedir}/drivers.xml-->
<!--							</customRepositoryMap>-->
<!--						</configuration>-->
<!--						<executions>-->
<!--							<execution>-->
<!--								&lt;!&ndash; use phase "none" to skip download step &ndash;&gt;-->
<!--								<phase>${drivers.downloader.phase}</phase>-->
<!--								<goals>-->
<!--									<goal>selenium</goal>-->
<!--								</goals>-->
<!--							</execution>-->
<!--						</executions>-->
<!--					</plugin>-->
<!--				</plugins>-->
<!--			</build>-->
<!--		</profile>-->

<!--	</profiles>-->
</project>
